statements          : NewLine* expr(NewLine + expr)* NewLine*

indent_statements   : NewLine* tab_expr(NewLine + tab_expr)*

tab_expr            : TAB expr

expr                : IDENTIFIER EQU expr
                    : comp-expr((KEYWORD:'वा'|KEYWORD:'च') comp-expr)*

comp_expr           : (KEYWORD:'न'| NOT) comp-expr
                    : arith-expr ((ISEQ|ISNEQ|ISG|ISL|ISGEQ|ISLEQ) arith-expr)*

arith_expr          : term ((PLUS|MINUS) term)*

term                : factor ((MUL|DIV|MOD) factor)*

factor              : (PLUS|MINUS) factor
                    : power

power               : factorial (POW factor)*

factorial           : call (FACTORIAL)

call                : atom (LPAREN (expr (COMMA expr)*)? RPAREN)?

atom                : INT|FLOAT|STRING|IDENTIFIER
                    : LPAREN expr RPAREN
                    : list_expr
                    : if_expr
                    : while_expr
                    : func_def

list_expr           : LSQUARE (expr (COMMA expr)*)? RSQUARE

if_expr             : KEYWORD:'यदि' expr THEN (NewLine indent_statements)
                      (KEYWORD:'नोचेत्' expr THEN (NewLine indent_statements))*
                      (KEYWORD:'चेत्' THEN (NewLine indent_statements))?

while_expr          : KEYWORD:'यावद्' expr THEN
                      (NewLine indent_statements)

for -expr           : KEYWORD: 'प्रति' conditons expr T_THEN
                      (NewLine indent_statements)

func_def            : KEYWORD:'कार्य' IDENTIFIER? LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN THEN
                      (NewLine indent_statements)
